@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Core.Models.Blocks
@{
    Layout = "master.cshtml";
    var blocks = Model.Value<BlockListModel>("article");
    var articlesPerRow = Model.Value<int>("articleRowContent", fallback: Fallback.ToDefaultValue, defaultValue: 3);
}

<link rel="stylesheet" href="~/css/ArticlesPage.css" />
<script src="~/js/ArticlesPage.js"></script>

@Html.Partial("~/Views/Partials/SectionHeader.cshtml")

<div class="articles-container">

    <!-- Filter Tabs -->
    <div class="article-filters">
        <button class="filter-tab active" data-tag="all">All</button>
        @if (blocks != null)
        {
            var uniqueTags = blocks
                .SelectMany(b => b.Content?.Value<IEnumerable<string>>("articleTags") ?? Enumerable.Empty<string>())
                .Select(t => t?.Trim().ToLowerInvariant())
                .Where(t => !string.IsNullOrWhiteSpace(t))
                .Distinct();

            foreach (var tag in uniqueTags)
            {
                <button class="filter-tab" data-tag="@tag">@tag</button>
            }
        }
    </div>

    <!-- Articles Wrapper -->
    <div id="articles-wrapper">
    @if (blocks != null && blocks.Any())
    {
        var articlesList = blocks.ToList();
        var totalArticles = articlesList.Count;
        var currentIndex = 0;
        
        @while (currentIndex < totalArticles)
        {
            var remainingArticles = Math.Min(articlesPerRow, totalArticles - currentIndex);
            var rowClass = $"articles-row-{remainingArticles}";
            
            <div class="@rowClass">
                @if (remainingArticles == 1)
                {
                    @RenderSingleArticle(articlesList[currentIndex])
                }
                else if (remainingArticles == 2)
                {
                    @RenderTwoArticles(articlesList, currentIndex)
                }
                else if (remainingArticles == 3)
                {
                    @RenderThreeArticles(articlesList, currentIndex)
                }
            </div>
            
            currentIndex += remainingArticles;
        }
    }
    </div>
    
    <!-- Load More Button -->
    <button id="load-more" style="display: none;">Load More</button>
</div>

@{
    IHtmlContent RenderSingleArticle(BlockListItem articleBlock)
    {
        return RenderArticleCard(articleBlock, "article-large");
    }
    
    IHtmlContent RenderTwoArticles(List<BlockListItem> articles, int startIndex)
    {
        var html = "";
        for (int i = 0; i < 2; i++)
        {
            html += RenderArticleCard(articles[startIndex + i], "").ToString();
        }
        return Html.Raw(html);
    }
    
    IHtmlContent RenderThreeArticles(List<BlockListItem> articles, int startIndex)
    {
        var html = "<div class='articles-left-column'>";
        html += RenderArticleCard(articles[startIndex], "article-large").ToString();
        html += "</div><div class='articles-right-column'>";
        
        for (int i = 1; i < 3; i++)
        {
            html += RenderArticleCard(articles[startIndex + i], "article-small").ToString();
        }
        html += "</div>";
        return Html.Raw(html);
    }
    
    IHtmlContent RenderArticleCard(BlockListItem articleBlock, string sizeClass)
    {
        var content = articleBlock.Content;
        if (content == null) return Html.Raw("");
        
        var articleImage = content.Value<IPublishedContent>("articleImage");
        var articleTags = content.Value<IEnumerable<string>>("articleTags");
        var englishArticleBlockList = content.Value<BlockListModel>("englishArticle");
        
        var html = $"<div class='article-preview {sizeClass}'>";
        
        if (articleImage != null)
        {
            html += $"<img src='{articleImage.Url()}' alt='Article Image' class='article-image' />";
            
            // Tags
            if (articleTags?.Any() == true)
            {
                html += "<div class='article-tags'>";
                foreach (var tag in articleTags)
                {
                    html += $"<span class='article-tag'>{tag}</span>";
                }
                html += "</div>";
            }
            
            // Content overlay
            if (englishArticleBlockList?.Any() == true)
            {
                var firstBlock = englishArticleBlockList.First();
                if (firstBlock?.Content != null)
                {
                    var title = firstBlock.Content.Value<string>("title");
                    var description = firstBlock.Content.Value<string>("description");
                    
                    html += "<div class='article-content'>";
                    if (!string.IsNullOrEmpty(title))
                    {
                        html += $"<h2 class='article-title'>{title}</h2>";
                    }
                    if (!string.IsNullOrEmpty(description))
                    {
                        html += $"<div class='article-description'>{description}</div>";
                    }
                    html += "</div>";
                }
            }
        }
        
        html += "</div>";
        return Html.Raw(html);
    }
}