@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Extensions
@model Umbraco.SampleSite.Models.LatestBlogPostsViewModel;

<link rel="stylesheet" href="~/css/blog-styles.css">

<div class="container-fluid px-4 py-5">
    <div class="row g-4">
        @foreach (IPublishedContent post in Model.BlogPosts)
        {
            <div class="col-lg-4 col-md-6">
                <article class="blog-card h-100 shadow-sm">
                    <a href="@post.Url()" class="text-decoration-none text-dark">
                        @{
                            var blogImage = post.Value<IPublishedContent>("blogImage");
                        }
                        @if (blogImage != null)
                        {
                            <div class="blog-image-wrapper">
                                <img src="@(blogImage?.Url() ?? "")" alt="@post.Value("blogTitle")" class="blog-image" loading="lazy">
                                <div class="blog-overlay"></div>
                            </div>
                        }
                        else
                        {
                            <div class="blog-image-placeholder">
                                <i class="fas fa-image"></i>
                            </div>
                        }
                        
                        <div class="blog-content p-4">
                            <div class="blog-meta mb-3">
                                <div class="d-flex justify-content-between align-items-center flex-wrap">
                                    <span class="blog-date text-muted">
                                        <i class="far fa-calendar-alt me-1"></i>
                                        @post.CreateDate.ToString("MMM dd, yyyy")
                                    </span>
                                    @if (post.HasValue("blogAuthor"))
                                    {
                                        <span class="blog-author text-primary">
                                            <i class="far fa-user me-1"></i>
                                            @post.Value("blogAuthor")
                                        </span>
                                    }
                                </div>
                                @if (post.HasValue("categories"))
                                {
                                    <div class="blog-categories mt-2">
                                        @await Html.PartialAsync("~/Views/Partials/CategoryLinks.cshtml", post.Value<IEnumerable<string>>("categories"))
                                    </div>
                                }
                            </div>
                            
                            <h3 class="blog-title h5 fw-bold mb-3 lh-base">
                                @(post.HasValue("blogTitle") ? post.Value("blogTitle") : post.Value("pageTitle"))
                            </h3>
                            
                            @if (post.HasValue("excerpt"))
                            {
                                <div class="blog-excerpt text-muted mb-3">
                                    @post.Value("excerpt")
                                </div>
                            }
                            
                            <div class="blog-read-more">
                                <span class="btn btn-outline-primary btn-sm">
                                    Read More <i class="fas fa-arrow-right ms-1"></i>
                                </span>
                            </div>
                        </div>
                    </a>
                </article>
            </div>
        }
    </div>

    @if (Model.BlogPosts.Count() < Model.Total)
    {
        <div class="pagination-wrapper mt-5">
            <nav aria-label="Blog pagination" class="d-flex justify-content-center">
                <ul class="pagination pagination-lg shadow-sm">
                    @if (Model.Page <= 1)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">
                                <i class="fas fa-chevron-left me-1"></i>Previous
                            </span>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" href="@(Model.Url + "?page=" + (Model.Page - 1))">
                                <i class="fas fa-chevron-left me-1"></i>Previous
                            </a>
                        </li>
                    }
                    
                    @for (int i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(Model.Page == i ? "active" : "")">
                            <a class="page-link" href="@(Model.Url + "?page=" + i)">@i</a>
                        </li>
                    }
                    
                    @if (Model.Page == Model.PageCount)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">
                                Next<i class="fas fa-chevron-right ms-1"></i>
                            </span>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" href="@(Model.Url + "?page=" + (Model.Page + 1))">
                                Next<i class="fas fa-chevron-right ms-1"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>